version: '3.8'

x-function: &function
  build:
    context: ugc_api
    dockerfile: Dockerfile
  env_file:
    - ugc_api/.env
  volumes:
    - ./ugc_api:/app
  depends_on:
      kafka:
        condition: service_healthy

services:
  ugc_api:
    <<: *function

  nginx:
    image: nginx:1.22.0
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/site_conf:/etc/nginx/conf.d:ro
    ports:
      - "8000:8000"
    depends_on:
      - ugc_api

  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    expose:
      - 2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - "zookeeper_data:/bitnami"
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 10s

  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    hostname: kafka
    expose:
      - 21019
      - 9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - "kafka_data:/bitnami"
    healthcheck:
      test: kafkacat -b localhost:9092 -L
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 10s

  clickhouse-zookeeper:
    image: zookeeper:3.5
    container_name: clickhouse-zookeeper
    hostname: clickhouse-zookeeper

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    expose:
      - 8123
      - 9000
    volumes:
      - ./clickhouse/data/node1:/etc/clickhouse-server
      - ./clickhouse/init-db/init-shard1.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - clickhouse-zookeeper
      - clickhouse-node2
      - clickhouse-node4

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse/data/node3:/etc/clickhouse-server
      - ./clickhouse/init-db/init-shard2.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - clickhouse-zookeeper
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node4

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - clickhouse-zookeeper
  
  init-kafka:
    image: bitnami/kafka:3.2.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka:21019 --list

      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:21019 --create --if-not-exists --topic films-timestamps --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:21019 --list
      "


volumes:
  zookeeper_data:
  kafka_data: